buildscript {
	ext {
		springBootVersion = '2.1.4.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath "io.spring.gradle:dependency-management-plugin:1.0.6.RELEASE"
	}
}

subprojects {
	group = 'com.example'
	version = '0.0.1-SNAPSHOT'

	apply plugin: 'java'
	apply plugin: 'org.springframework.boot'
	apply plugin: 'io.spring.dependency-management'

	sourceCompatibility = 1.8

	repositories {
		mavenCentral()
	}

	task initSourceFolders {
		sourceSets*.java.srcDirs*.each {
			if( !it.exists() ) {
				it.mkdirs()
			}
		}

		sourceSets*.resources.srcDirs*.each {
			if( !it.exists() ) {
				it.mkdirs()
			}
		}
	}
}

project(':bootApp-server') {
	dependencies {
		// JPA Data (We are going to use Repositories, Entities, Hibernate, etc...)
		compile 'org.springframework.boot:spring-boot-starter-data-jpa'

		// Use MySQL Connector-J
		compile 'mysql:mysql-connector-java'

		// spring
		compile('org.springframework.boot:spring-boot-starter')
		compile('org.springframework.boot:spring-boot-starter-web')
		compile('org.projectlombok:lombok')

		// Groovy
		compile 'org.codehaus.groovy:groovy-all:2.4.7'

		// test
		testCompile('org.springframework.boot:spring-boot-starter-test')
		testCompile('org.spockframework:spock-core:1.1-groovy-2.4')
		testCompile('org.spockframework:spock-spring:1.1-groovy-2.4')

	}

}
